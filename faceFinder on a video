#faceFinder on a video using  Stump-based 24x24 discrete(?) adaboost frontal face detector

import cv2

# Input video file path
input_video_path = 'C:/Users/48572/Desktop/www/python/faces/.venv/video/GeoVision VD8700 Face Recognition IP Camera Demo Video.mp4'

# Open the video file
cap = cv2.VideoCapture(input_video_path)

# Load the pre-trained face cascade classifier (you may need to adjust the path)
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Create a window to display the input video
cv2.namedWindow('Input Video', cv2.WINDOW_NORMAL)

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # Convert the frame to grayscale for face detection
    gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect faces in the frame
    faces = face_cascade.detectMultiScale(gray_frame, scaleFactor=1.3, minNeighbors=5)

    # Draw rectangles around the detected faces
    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)

    # Display the frame with detected faces
    cv2.imshow('Input Video', frame)

    # Break the loop if 'q' key is pressed
    if cv2.waitKey(30) & 0xFF == ord('q'):
        break

# Release the VideoCapture object
cap.release()

# Close all windows
cv2.destroyAllWindows()
